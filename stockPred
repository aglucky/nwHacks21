
Skip to content
Using Gmail with screen readers
Meet
Hangouts
1 of 1,537
FINAL CODE
Inbox
Adit Anup
	
Attachments12:13 AM (3 minutes ago)
	
to me
final stockPredict Method
Attachments area
	
	
	

# -*- coding: utf-8 -*-
"""Stock Market 3.0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1BF56v7prYkr-QIwkKlBGGa3FMwd1kw0B
"""

"""Stock Market Predictions.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1FhlIl64U2dbzPUh5j_0g2SBz2JdlWg0n
"""

!pip install Quandl

import quandl
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import datetime

from sklearn.model_selection import train_test_split
from sklearn import preprocessing
from sklearn.linear_model import LinearRegression

quandl.ApiConfig.api_key = 'bkHsnqxbDxNvyCYKJYWW'

def stockPredict(ticker):
  df = quandl.get(f"WIKI/{ticker}")
  df = df[['Adj. Close']]
  # df

  #df['Adj. Close'].plot(figsize=(15,6), color='g')
  #plt.legend(loc='upper left')

  forecast = 30
  df['Prediction'] = df[['Adj. Close']].shift(-forecast)

  X = np.array(df.drop(['Prediction'], 1))
  X = preprocessing.scale(X)

  X_forecast = X[-forecast:]
  X = X[:-forecast]

  y = np.array(df['Prediction'])
  y = y[:-forecast]

  X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)

  clf = LinearRegression()
  clf.fit(X_train, y_train)

  confidence = clf.score(X_test, y_test)

  forecast_predicted = clf.predict(X_forecast)
  #print(forecast_predicted)

  dates = pd.date_range(start="2018-03-28", end="2018-04-26")
  #plt.plot(dates, forecast_predicted, color = 'y')
  #df['Adj. Close'].plot(color='g')
  #plt.xlim(xmin=datetime.date(2017, 4, 26))

  # ticker = "stock ticker: AMZN" #@param {type:"string"}
  #print(ticker)

  return forecast_predicted[-1], confidence

pred,conf = stockPredict("AAP")
print(pred,conf)

